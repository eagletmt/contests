---
layout: post
title: "POJ 3638 - Moogle"
---
[http://poj.org/problem?id=3638](http://poj.org/problem?id=3638)

## 概要
一直線の道に \\(h\\) 個の家が並んでおり、\\(i\\) 番目の家の位置は \\(x\_i\\) である。
ここから \\(c\\) 個の家の位置を選び地図データとする。
このとき両端の家は必ず選ばれるとする。
選ばれなかった家 \\(k\\) の位置は、\\(k\\) より小さくて \\(k\\) から一番近い選ばれた家を \\(i\\) とし、
\\(k\\) より大きくて \\(k\\) から一番近い選ばれた家を \\(j\\) とすると (つまり \\(i < k < j\\) で、\\(i\\) と \\(j\\) の間に選ばれた家は一つもない)、
\\(x\_i + (x\_j - x\_i) \\cdot \\frac{k-i}{j-i}\\) とする。

このとき、地図データと実際の家の位置の誤差の平均の最小値を答える。

## 制約
- \\(2 \\le h \\le 200\\)
- \\(2 \\le c \\le h\\)

## 解法
まず、\\(i\\) と \\(j\\) の家を選びその間のどの家も選ばなかったとき、その間の家で生じる誤差の合計値 `err[i][j]` を事前に計算しておく。

そして

    dp[i][j] = j 個目に i 番目の家を選んだときの誤差の最小値

という DP 表を

    dp[k][j+1] = min { dp[i][j] + err[i][k] } for k in i+1 .. h

と更新して `dp[h-1][c-1]/h` を答える。

{% include_code lang:cpp poj/3638.cc %}
