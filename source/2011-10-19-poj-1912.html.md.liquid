---
layout: post
title: "POJ 1912 - A highway and the seven dwarfs"
---
[http://poj.org/problem?id=1912](http://poj.org/problem?id=1912)

## 概要
N 個の平面上の点が与えられる．

M 本の与えられた各直線に対して，N 個すべての点がその直線の片側にあるかどうかを答える．

## 制約
- N <= 100000
- -10^9 <= x, y座標 <= 10^9
- 点とちょうど交わるような直線は与えられない

## 解法
愚直にやると `O(N * M)`．問題文中で M に制約が無いが，[CEOI 2002, Košice, Slovakia](http://web.ics.upjs.sk/ceoi/Documents.html) の入力データを見てみると最大ケースで M = 100000 なので余裕で TLE する．

まず，N 個の点のうち，凸包となる点のみを考えればよいことがわかる．
凸包はソートした後に `O(N)` で求められるので，`O(N log N)` で計算できる．

与えられた直線の傾きを d とすると，傾きが d な直線を +y 方向から凸包に近づけたときに最初に交わる頂点 p1 と，逆に -y 方向から凸包に近づけたときの頂点 p2 がある．
この p1, p2 を求めることができれば，直線に対して p1, p2 が片側にあるかどうかを調べるだけでよい．

凸包の上側をなす辺の傾きを右から順に d1[1], ..., d1[K1] とすると，d1 は昇順に並ぶ．
この d1 に昇順を保つように d を挿入する位置の点が p1 である．
同様に凸包の下側をなす辺の傾きを左から順に d2[1], ..., d2[K2] として，これに d を挿入する位置の点が p2．
これは二分探索により `O(log N)` で計算できるため，全体で `O(N log N + M log N)` となる．

{% include_code lang:cpp poj/1912.cc %}
